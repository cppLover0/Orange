#include <cstdint>
#include <arch/x86_64/interrupts/idt.hpp>
#include <etc/logging.hpp>

#include <arch/x86_64/cpu/data.hpp>

#include <generic/locks/spinlock.hpp>

#include <etc/bootloaderinfo.hpp>

#include <generic/mm/paging.hpp>

typedef struct stackframe {
    struct stackframe* rbp;
    uint64_t rip;
} __attribute__((packed)) stackframe_t;



void panic(int_frame_t* ctx, const char* msg) {

    memory::paging::enablekernel();
    extern locks::spinlock log_lock;
    log_lock.unlock();

    arch::x86_64::process_t* proc = arch::x86_64::cpu::data()->temp.proc;

    uint64_t cr2;
    asm volatile("mov %%cr2, %0" : "=r"(cr2) : : "memory");
    Log::Display(LEVEL_MESSAGE_FAIL,"Got exception \"%s\" with rip 0x%p, vec %d, cr2 0x%p and error code 0x%p in proc %d !\n",msg,ctx->rip,ctx->vec,cr2,ctx->err_code,proc ? proc->id : 0);

     char const *const msg1 =
    "======+++++++***************####**++++++========" "\n"
    "=--:::----:-==++*****+++++==++++*+====---=======" "\n"
    "-::........::-==++++++===--:::.:::::::-=========" "\n"
    ":::----=---:::-====++===--:::...::-=============" "\n"
    "--==+++++=+++=::--==+++=----==+++++***+++=======" "\n"
    ":.      :----======+#*++===-===---:.:::::--=====" "\n"
    "=----===+++++======+**++++=====--::-===---------" "\n"
    "==----:-==========++++++++++++====++++**++====++" "\n"
    "========+++========+++++++++++++++=======+++=+++" "\n"
    "=====++++++========++++====+++***++++++**#*+++++" "\n"
    "=====++++++=======++====-=====+*##******##*+++++" "\n"
    "===+++++=======+++**+==-=========*#######*++++++" "\n"
    "=========-===---========+++=--=*+==+****++++++++" "\n"
    "---====--==:...:----::.  .::::=========+++======" "\n"
    "-------:--:..........:::::::::::::-=--==========" "\n"
    "--------:. .. ....:-:. .::...:::..::----========" "\n"
    "-------:...........--....::...::...::::---======" "\n"
    "------:. .........-===:.:::...:::......:---=====" "\n"
    "-----=-. .... ..     ..........:::::::.  :--====" "\n"
    "------=-::-...+##=                    ::-:-=====" "\n"
    "::::--====-=+:     :::......:--=----:.-----====-" "\n"
    ".::----==--=+=--=+++**********++==---===--===---" "\n"
    ".:-:-=--===-==--=+****++++++++++=--=*===-====---" "\n"
    "..:-:==-======---=++++++++====---===+========---" "\n"
    "..:---==-=====---==========+#*=--==+++=======--=" "\n"
    "...--:=+===---============++++=====++=======---=" "\n";
    // clang-format on
    // c9 8d 74
    Log::Raw("\033[38;2;201;141;116m\n\n");
    Log::Raw("%s",msg1);
    Log::Raw("\033[0m\n\n");

    asm volatile("hlt");
}

extern "C" void CPUKernelPanic(int_frame_t* ctx) {
    panic(ctx,"CPU Exception");
}