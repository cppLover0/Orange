diff -Naur doomgeneric/doomgeneric/doomgeneric_orange.c doomgeneric-patched/doomgeneric/doomgeneric_orange.c
--- doomgeneric/doomgeneric/doomgeneric_orange.c	1970-01-01 03:00:00.000000000 +0300
+++ doomgeneric-patched/doomgeneric/doomgeneric_orange.c	2025-06-21 21:20:17.599810110 +0300
@@ -0,0 +1,142 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <fcntl.h>
+#include <linux/fb.h>
+#include <sys/ioctl.h>
+#include <sys/mman.h>
+#include <unistd.h>
+#include <string.h>
+#include <stdint.h>
+#include <termios.h>
+#include <signal.h>
+
+#include "doomkeys.h"
+
+#include "doomgeneric.h"
+
+int fb_fd;
+struct fb_var_screeninfo vinfo;
+struct fb_fix_screeninfo finfo;
+unsigned char *fb_ptr;
+
+struct termios back;
+
+#define TTY_RELEASE_IOCTL 0xFFFF0001
+
+void __restore() {
+    memset(fb_ptr,0,vinfo.yres * vinfo.xres * vinfo.bits_per_pixel / 8);
+    tcsetattr(STDIN_FILENO, TCSANOW, &back);
+
+    char mode = 0;
+    ioctl(0,TTY_RELEASE_IOCTL,&mode);
+
+}
+
+void DG_Init() {
+    fb_fd = open("/dev/fb0", O_RDWR); 
+
+    ioctl(fb_fd, FBIOGET_VSCREENINFO, &vinfo);
+    ioctl(fb_fd, FBIOGET_FSCREENINFO, &finfo);
+
+    char mode = 1;
+    ioctl(0,TTY_RELEASE_IOCTL,&mode); // provide key releases
+
+    fb_ptr = (unsigned char *)mmap(0, vinfo.yres_virtual * vinfo.xres_virtual * vinfo.bits_per_pixel / 8,
+                                    PROT_READ | PROT_WRITE, MAP_SHARED, fb_fd, 0);
+
+    struct termios newt;
+    tcgetattr(STDIN_FILENO, &back);
+    tcgetattr(STDIN_FILENO, &newt);
+    newt.c_lflag &= ~(ICANON | ECHO);
+    newt.c_cc[VMIN] = 0;
+    tcsetattr(STDIN_FILENO, TCSANOW, &newt);
+    atexit(__restore);
+
+}
+
+void DG_DrawFrame() {
+    for(int i = 0;i < DOOMGENERIC_RESY;i++) {
+        uint64_t fb = (uint64_t)fb_ptr;fb += (finfo.line_length * i);
+        memcpy((void*)fb,DG_ScreenBuffer + (DOOMGENERIC_RESX * i),DOOMGENERIC_RESX * 4);
+    }
+}
+
+void DG_SleepMs(uint32_t ms) {
+    usleep(ms * 1000);
+}
+
+uint32_t DG_GetTicksMs() {
+    uint64_t timestamp;
+    asm volatile("syscall" : "=d"(timestamp) : "a"(42) : "rcx","r11");
+    uint64_t ms = (timestamp / 1000) / 1000;
+    return ms;
+
+}
+
+int DG_GetKey(int* pressed, unsigned char* key) {
+    uint8_t key0 = 0;
+
+    if(!read(STDIN_FILENO,&key0,1))
+        return 0;
+
+    if(key0 & (1 << 7)) {
+        *pressed = 0;
+        key0 &= ~(1 << 7); // clear release bit
+    } else 
+        *pressed = 1;
+
+    uint8_t doom_key;
+    switch(key0) {
+        case 'a':
+        case 'A':
+            doom_key = KEY_LEFTARROW;
+            break;
+        case 'd':
+        case 'D':
+            doom_key = KEY_RIGHTARROW;
+            break;
+        case 's':
+        case 'S':
+            doom_key = KEY_DOWNARROW;
+            break;
+        case 'w':
+        case 'W':
+            doom_key = KEY_UPARROW;
+            break;
+        case 'e':
+        case 'E':
+            doom_key = KEY_USE;
+            break;
+        case 15:
+            doom_key = KEY_RSHIFT;
+            break;
+        case 27:
+            doom_key = KEY_ESCAPE;
+            break;
+        case ' ':
+            doom_key = KEY_FIRE;
+            break;
+        default:
+            doom_key = key0;
+            break;    
+    }
+    *key = doom_key;
+    return 1;
+}
+
+void DG_SetWindowTitle(const char * title) {
+
+}
+
+int main(int argc, char **argv)
+{
+    doomgeneric_Create(argc, argv);
+
+    while (1)
+    {
+        doomgeneric_Tick();
+    }
+    
+    return 0;
+}
+
diff -Naur doomgeneric/doomgeneric/i_system.c doomgeneric-patched/doomgeneric/i_system.c
--- doomgeneric/doomgeneric/i_system.c	2025-06-19 16:12:59.641729634 +0300
+++ doomgeneric-patched/doomgeneric/i_system.c	2025-06-20 20:27:17.156598938 +0300
@@ -257,11 +257,7 @@
         entry = entry->next;
     }
 
-#if ORIGCODE
-    SDL_Quit();
-
     exit(0);
-#endif
 }
 
 #if !defined(_WIN32) && !defined(__MACOSX__) && !defined(__DJGPP__)
@@ -460,16 +456,7 @@
     }
 #endif
 
-    // abort();
-#if ORIGCODE
-    SDL_Quit();
-
     exit(-1);
-#else
-    while (true)
-    {
-    }
-#endif
 }
 
 //
diff -Naur doomgeneric/doomgeneric/Makefile doomgeneric-patched/doomgeneric/Makefile
--- doomgeneric/doomgeneric/Makefile	2025-06-19 16:12:59.634729371 +0300
+++ doomgeneric-patched/doomgeneric/Makefile	2025-06-20 20:57:21.688983500 +0300
@@ -12,17 +12,17 @@
 endif
 
 
-CC=clang  # gcc or g++
-CFLAGS+=-ggdb3 -Os
+CC=x86_64-orange-gcc  # gcc or g++
+CFLAGS+=-ggdb3 -Os -std=gnu17
 LDFLAGS+=-Wl,--gc-sections
 CFLAGS+=-ggdb3 -Wall -DNORMALUNIX -DLINUX -DSNDSERV -D_DEFAULT_SOURCE # -DUSEASM
-LIBS+=-lm -lc -lX11
+LIBS+=-lm -lc
 
 # subdirectory for objects
 OBJDIR=build
 OUTPUT=doomgeneric
 
-SRC_DOOM = dummy.o am_map.o doomdef.o doomstat.o dstrings.o d_event.o d_items.o d_iwad.o d_loop.o d_main.o d_mode.o d_net.o f_finale.o f_wipe.o g_game.o hu_lib.o hu_stuff.o info.o i_cdmus.o i_endoom.o i_joystick.o i_scale.o i_sound.o i_system.o i_timer.o memio.o m_argv.o m_bbox.o m_cheat.o m_config.o m_controls.o m_fixed.o m_menu.o m_misc.o m_random.o p_ceilng.o p_doors.o p_enemy.o p_floor.o p_inter.o p_lights.o p_map.o p_maputl.o p_mobj.o p_plats.o p_pspr.o p_saveg.o p_setup.o p_sight.o p_spec.o p_switch.o p_telept.o p_tick.o p_user.o r_bsp.o r_data.o r_draw.o r_main.o r_plane.o r_segs.o r_sky.o r_things.o sha1.o sounds.o statdump.o st_lib.o st_stuff.o s_sound.o tables.o v_video.o wi_stuff.o w_checksum.o w_file.o w_main.o w_wad.o z_zone.o w_file_stdc.o i_input.o i_video.o doomgeneric.o doomgeneric_xlib.o
+SRC_DOOM = dummy.o am_map.o doomdef.o doomstat.o dstrings.o d_event.o d_items.o d_iwad.o d_loop.o d_main.o d_mode.o d_net.o f_finale.o f_wipe.o g_game.o hu_lib.o hu_stuff.o info.o i_cdmus.o i_endoom.o i_joystick.o i_scale.o i_sound.o i_system.o i_timer.o memio.o m_argv.o m_bbox.o m_cheat.o m_config.o m_controls.o m_fixed.o m_menu.o m_misc.o m_random.o p_ceilng.o p_doors.o p_enemy.o p_floor.o p_inter.o p_lights.o p_map.o p_maputl.o p_mobj.o p_plats.o p_pspr.o p_saveg.o p_setup.o p_sight.o p_spec.o p_switch.o p_telept.o p_tick.o p_user.o r_bsp.o r_data.o r_draw.o r_main.o r_plane.o r_segs.o r_sky.o r_things.o sha1.o sounds.o statdump.o st_lib.o st_stuff.o s_sound.o tables.o v_video.o wi_stuff.o w_checksum.o w_file.o w_main.o w_wad.o z_zone.o w_file_stdc.o i_input.o i_video.o doomgeneric.o doomgeneric_orange.o
 OBJS += $(addprefix $(OBJDIR)/, $(SRC_DOOM))
 
 all:	 $(OUTPUT)
